#!/bin/bash
QUE=$1
KEY=mIN5BAt8Q4kciIz367SmtW9t6aWsj0oF6bafJBOd
URL1=https://api.fda.gov/drug/label.json?api_key=$KEY\&search=generic_name:$QUE\&count=drug_interactions\&limit=1000
URL2=https://api.fda.gov/drug/label.json?api_key=$KEY\&search=adverse_reactions:$QUE+drug_interactions:$QUE+warnings_and_cautions:$QUE\&limit=1
URL3=https://api.fda.gov/drug/label.json?api_key=$KEY\&search=generic_name:$QUE\&limit=1

if [[ -z "$QUE" ]]; then
    echo " "
    echo " "
    echo Searching openFDA without a drug name is dangerous, please specify\:
    echo \ \ \ \ \$ druginteractioncount generic-name
    echo " "
    echo For additional help, try\:
    echo \ \ \ \ \$ druginteractions help
    echo " "
    echo " "
    exit 0
elif [ "$QUE" = help ]; then
    echo You have selected the help menu, it\'s a little lonely at the moment.
else
    DRUG="`wget --no-check-certificate -q -O - $URL3`" #should be URL2
    #wget --no-check-certificate $URL1 -O $QUE-interactions
    #DRUG=$(#wget --no-check-certificate $URL2 -q -O -)
fi

#We want to get an idea of how many pages there are that satisfy our query.
#First we need to get this number (which will be our endpoint).

TOTAL="`echo "$DRUG" | grep '"total": ' | cut -d ' ' -f 8`"

#There is one problem: 0-indexing, we have to subtract 1 from TOTAL
REALTOTAL=$[TOTAL-1]

#Let the user know what to expect
echo " "
echo $TOTAL articles in query
echo " "

FILENAME=$QUE-data.txt
echo Results will be output to file: $FILENAME
touch $FILENAME
STARTTIME=$(date '+%s')

SKIP=0
function pull {
    until [ $SKIP -gt $REALTOTAL ]; do
          echo Progress: $SKIP / $TOTAL "  |  " Elapsed seconds: $[$(date '+%s')-STARTTIME] "  |  " Checking: $QUE "  |  " Editing: $FILENAME
          URL4="`echo $URL3`"\&skip=$SKIP
          DRUG="`wget --no-check-certificate -q -O - $URL4`"
echo $URL4 >> $FILENAME
echo Page $SKIP of $TOTAL >> $FILENAME
echo "$DRUG" | grep -A 1 '"generic_name"' >> $FILENAME
echo "$DRUG" | grep -A 1 '"brand_name"' >> $FILENAME
echo " " >> $FILENAME
echo "$DRUG" | grep -A 1 '"drug_interactions":' >> $FILENAME
echo "$DRUG" | grep -A 1 '"adverse_reactions":' >> $FILENAME
echo "$DRUG" | grep -A 1 '"warnings_and_cautions":' >> $FILENAME
echo " " >> $FILENAME
echo " " >> $FILENAME
echo "--------------------------------------------------------------------------------------------------------------------" >> $FILENAME
let SKIP+=1
done
}

pull

#Prompt the user for some input
#echo Continue? [Y/N]
#read CHOICE
#if [ "$CHOICE" = "Y" ]; then
#pull
#exit
#else
#exit
#fi
